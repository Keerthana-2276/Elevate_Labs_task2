# -*- coding: utf-8 -*-
"""Task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nrgA6jRxvkYi6emNcvBk_znw87SLvLBg
"""

# Step 1: Import Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from google.colab import files
import io

# Step 2: Upload CSV File Manually
uploaded = files.upload()
df = pd.read_csv(io.BytesIO(next(iter(uploaded.values()))))

# Step 3: Basic Info
print("🔹 Shape of the dataset:", df.shape)
print("\n🔹 Column names:\n", df.columns.tolist())
print("\n🔹 First 5 rows:\n", df.head())
print("\n🔹 Data types:\n", df.dtypes)
print("\n🔹 Missing values:\n", df.isnull().sum())

# Step 4: Summary Statistics
print("\n📊 Descriptive Statistics:\n", df.describe(include='all'))

# Step 5: Handle missing values (optional cleanup for visuals)
df_cleaned = df.copy()
df_cleaned['Age'] = df_cleaned['Age'].fillna(df_cleaned['Age'].median())
df_cleaned['Fare'] = df_cleaned['Fare'].fillna(df_cleaned['Fare'].median())
df_cleaned['Embarked'] = df_cleaned['Embarked'].fillna(df_cleaned['Embarked'].mode()[0])

# Step 6: Histograms for Numeric Features
df_cleaned.select_dtypes(include=np.number).hist(bins=30, figsize=(15, 10), edgecolor='black')
plt.suptitle("📊 Histograms of Numeric Features", fontsize=16)
plt.tight_layout()
plt.show()

# Step 7: Boxplots for Numeric Features
numeric_cols = df_cleaned.select_dtypes(include=np.number).columns
plt.figure(figsize=(15, 8))
for i, col in enumerate(numeric_cols, 1):
    plt.subplot(len(numeric_cols)//3 + 1, 3, i)
    sns.boxplot(x=df_cleaned[col], color='skyblue')
    plt.title(f'Boxplot of {col}')
plt.tight_layout()
plt.show()

# Step 8: Correlation Matrix (Exclude non-numeric columns)
corr = df_cleaned[numeric_cols].corr()
plt.figure(figsize=(12, 8))
sns.heatmap(corr, annot=True, cmap='coolwarm', fmt=".2f", square=True)
plt.title("📌 Correlation Matrix Heatmap")
plt.show()

# Step 9: Pairplot (only for first 5 numeric columns to avoid overload)
sns.pairplot(df_cleaned[numeric_cols[:5]])
plt.suptitle("🔗 Pairplot of Numeric Features", y=1.02)
plt.show()

# Step 10: Plotly Interactive Scatter Matrix (if at least 3 numeric cols)
if len(numeric_cols) >= 3:
    fig = px.scatter_matrix(df_cleaned,
                            dimensions=numeric_cols[:4],
                            color='Survived',
                            title="🎯 Interactive Scatter Matrix (Plotly)")
    fig.show()

# Step 11: Categorical Insights (Sex vs Survived, Embarked vs Survived)
plt.figure(figsize=(10,4))
sns.countplot(data=df_cleaned, x='Sex', hue='Survived')
plt.title("🧍 Sex vs Survival")
plt.show()

plt.figure(figsize=(10,4))
sns.countplot(data=df_cleaned, x='Embarked', hue='Survived')
plt.title("🛳️ Embarkation Port vs Survival")
plt.show()

# Step 12: Final Message
print("\n✅ EDA Complete! Explore the visual patterns for deeper feature-level insights.")